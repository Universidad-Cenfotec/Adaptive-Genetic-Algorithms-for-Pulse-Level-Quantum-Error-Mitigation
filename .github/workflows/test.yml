# .github/workflows/run_tests.yml
name: Run Unit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 coverage  # Asegúrate de que flake8 y coverage estén instalados

      - name: Lint with flake8
        run: |
          flake8 src/ tests/
        continue-on-error: true  # Opcional: Permite que el flujo de trabajo continúe incluso si flake8 falla

      - name: Run Unit Tests with Coverage
        run: |
          coverage run -m unittest discover -s tests
          coverage report
          coverage xml  # Genera un reporte XML para integraciones posteriores

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}  # Añade el token como seudo
          # Si tu repositorio es público, puedes omitir el token
          # token: ${{ secrets.CODECOV_TOKEN }}  # Solo para repositorios privados

      - name: Archive test results on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./tests/